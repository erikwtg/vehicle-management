version: "3.6"

x-shared-environment: &shared-environment
  restart: unless-stopped
  networks:
    - vehicle_management_network

services:
  server:
    <<: *shared-environment
    image: node:22.19.0
    container_name: vehicle_management_server
    working_dir: /server
    volumes:
      - ./server:/server
      - /server/node_modules
    command: ["sh", "-c", "npm install -g pnpm && pnpm install && pnpm start:dev"]
    ports:
      - 3000:3000
    depends_on:
      postgres:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy

  vehicles-microservice:
    <<: *shared-environment
    image: node:22.19.0
    container_name: vehicle_management_vehicles_microservice
    environment:
      DB_URL: postgres
      NODE_ENV: development
      DATABASE_URL: 'postgres://postgres:info@postgres:5432/vehicle_management'
      DB_HOST: postgres
      DB_USER: postgres
      DB_PASSWORD: info
      DB_NAME: vehicle_management
      DB_PORT: 5432
      REDIS_HOST: redis
      REDIS_PORT: 6379
    working_dir: /vehicles-microservice
    volumes:
      - ./vehicles-microservice:/vehicles-microservice
      - /vehicles-microservice/node_modules
    command: ["sh", "-c", "npm install -g pnpm && pnpm install && npx drizzle-kit migrate && pnpm start:dev"]
    depends_on:
      postgres:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy

  postgres:
    <<: *shared-environment
    image: postgres
    container_name: vehicle_management_postgres
    environment:
      POSTGRES_DB: vehicle_management
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: info
    volumes:
      - postgres-data:/var/lib/postgresql/data/
    ports:
      - 5432:5432
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 3s
      retries: 5

  rabbitmq:
    <<: *shared-environment
    image: rabbitmq:management
    container_name: vehicle_management_rabbitmq
    ports:
      - 5672:5672
      - 15672:15672
    environment:
      RABBITMQ_DEFAULT_USER: info
      RABBITMQ_DEFAULT_PASS: info
    healthcheck:
      test: ["CMD", "rabbitmqctl", "status"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    <<: *shared-environment
    image: redis:7-alpine
    container_name: vehicle_management_redis
    ports:
      - 6379:6379
    volumes:
      - redis-data:/data
    command: ["redis-server", "--save", "", "--appendonly", "no"]
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 5
  
  webapp:
    <<: *shared-environment
    image: node:22.19.0
    working_dir: /app
    container_name: vehicle_management_webapp
    command: ["sh", "-c", "npm install -g pnpm && pnpm install && pnpm start"]
    volumes:
      - ./webapp:/app/
      - /app/node_modules
    ports:
      - 4200:4200
    depends_on:
      - server

volumes:
  postgres-data:
  redis-data:

networks:
  vehicle_management_network:
    external: true